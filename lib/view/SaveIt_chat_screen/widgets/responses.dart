import 'dart:math';

class LocalResponses {
  static final Map<String, List<String>> intents = {
    "budget": [
      "ابدأ بتحديد دخلك الشهري وسجّل كل مصاريفك.",
      "قسّم المرتب على فئات: احتياجات، ادخار، ترفيه، إلخ.",
      "جرب قاعدة 50/30/20: 50% احتياجات، 30% رغبات، 20% ادخار.",
      "استخدم التطبيق لمتابعه ميزانيتك بدقه.",
    ],
    "debt": [
      "ابدأ بالديون اللي عليها فايدة أعلى عشان تقلل الخسائر.",
      "جرب طريقة Snowball: سدد أصغر دين الأول، وبعدها الأكبر.",
      "حاول تتفاوض مع البنك أو الشركة على خطة سداد أنسب.",
      "قلل من المصاريف غير الضرورية وحوّل المبلغ للديون الأول.",
    ],
    "saving": [
      "جرب قاعده 50/30/20 يعني 50% احتياجات و30% رغبات و20% ادخار.",
      "ابدأ بأنك تحوش 10% من مرتبك أول ما تستلمه.",
      "حاول تقلل مصاريف على الحاجات الصغيرة زي القهوة أو السجائر.",
      "اكتب مصاريفك عشان تشوف انت بتصرف في اي أكتر حاجة.",
      "خلي عيلتك تساعدك في التوفير.",
    ],
    "investing": [
      "تقدر تبدأ بشهادات الادخار لو لسه مبتدئ.",
      "حاول توزع استثماراتك بين أكتر من مجال عشان تقلل المخاطر.",
      "ابدأ بمبلغ صغير في أي مجال دارس أوضاعه.",
      "الاستثمار الطويل المدى غالبًا أفضل من المكاسب السريعة.",
    ],
    "emergency": [
      "حاول توفر من 3 لـ 6 شهور من مصاريفك الأساسية كصندوق طوارئ.",
      "ابدأ بمبلغ صغير ثابت كل شهر وخليه للطوارئ فقط.",
      "احتفظ بمبلغ في حساب سهل الوصول ليه، زي حساب توفير.",
      "صندوق الطوارئ بيحميك من اللجوء للديون وقت الأزمات.",
    ],
    "expenses": [
      "سجل كل مصروف يومي، حتى لو مبلغ صغير، عشان تعرف فين الفلوس بتروح.",
      "جرب تقسيم مصاريفك لفئات: أكل، مواصلات، ترفيه، إلخ.",
      "في نهاية الأسبوع راجع انت صرفت فلوس في إيه أكتر حاجة.",
      "استخدم التطبيق عشان تتبع مصاريفك بدقة.",
      "سجل مصاريفك في ورقة وشوف انت بتصرف في إيه كل يوم.",
    ],
    "welcome": [
      "أهلا بيك! ازاي اقدر اساعدك؟",
      "مساء الخير، انا معاك في أي استشارة مالية.",
      "انا تمام، اقدر اساعدك ازاي؟",
      "كله كويس، انا جاهز لمساعدتك.",
      "بخير يا صديقي، انا هنا عشان اساعدك.",
    ],
    "fallback": [
      "مفهمتش قصدك، ممكن تعيد صياغة السؤال؟",
      "ممكن توضح أكتر؟",
      "آسف مش فاهمك، ممكن تكرر اللي قولته؟",
      "ممكن تعيد تاني؟",
      "معلش مش واضح، ممكن تقول بطريقة تانية؟",
    ],
  };

  static String getReply(String userInput) {
    final text = userInput.toLowerCase();

    if (_match(text, ["ميزانية", "مصروف", "budget", "planning", "plan"])) {
      return _pick("budget");
    } else if (_match(text, ["دين", "قرض", "debt", "loan", "credit", "ديون"])) {
      return _pick("debt");
    } else if (_match(text, [
      "ادخار",
      "توفير",
      "saving",
      "save",
      "وفر",
      "احوش",
      "تحويش",
    ])) {
      return _pick("saving");
    } else if (_match(text, ["استثمار", "invest", "فلوس", "اسهم"])) {
      return _pick("investing");
    } else if (_match(text, ["طوارئ", "emergency", "أزمة", "fund"])) {
      return _pick("emergency");
    } else if (_match(text, ["مصروفات", "expenses", "track", "مصاريف"])) {
      return _pick("expenses");
    } else if (_match(text, [
      "hi",
      "hello",
      "مرحبا",
      "ازيك",
      "السلام",
      "hey",
      "اهلا",
      "صباح الخير",
      "مساء الخير",
      "عامل ايه",
      "اخبارك ايه",
    ])) {
      return _pick("welcome");
    } else {
      return _pick("fallback");
    }
  }

  static bool _match(String text, List<String> keywords) {
    for (final word in keywords) {
      if (text.contains(word)) return true;
    }
    return false;
  }

  static String _pick(String intent) {
    final responses = intents[intent]!;
    return responses[Random().nextInt(responses.length)];
  }
}
